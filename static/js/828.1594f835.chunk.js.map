{"version":3,"file":"static/js/828.1594f835.chunk.js","mappings":"oPA2DA,UAnDsB,WAAO,IAADA,EAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAgBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAiBJ,GAAlCK,GAA0CC,EAAAA,EAAAA,GAAAJ,EAAA,GAArC,GAENK,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,SAAqB,QAAdX,EAAAQ,EAASI,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,OAAQ,WAE3CC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAS,CAACC,QANM,WACnBP,EAASJ,EAAUY,QACrB,EAIqCJ,SAAC,YACjCZ,GACCU,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAACO,EAAa,CAAAL,SAAA,EACZC,EAAAA,EAAAA,KAAA,OACEK,IAAG,uCAAAC,OAAyCnB,EAAMoB,aAClDC,IAAKrB,EAAMsB,MACXC,MAAM,SAERb,EAAAA,EAAAA,MAACc,EAAU,CAAAZ,SAAA,EACTF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGZ,EAAMsB,MAAM,KAAGtB,EAAMyB,aAAaC,UAAU,EAAG,GAAG,QAErDhB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,eACYe,KAAKC,KAAsC,GAAjCC,WAAW7B,EAAM8B,eAAoB,QAE9DjB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,EAAM+B,YACVlB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,EAAMgC,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAO,GAAG,aAG5CtB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACuB,EAAgB,CAAAxB,SAAC,qBAClBC,EAAAA,EAAAA,KAACwB,EAAa,CAACC,GAAG,OAAM1B,SAAC,UACzBC,EAAAA,EAAAA,KAACwB,EAAa,CAACC,GAAG,UAAS1B,SAAC,aAC5BC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,QAGT1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,MAIrB,EAIA,IAAMvB,EAAgBwB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6DAM1BnB,EAAaiB,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sLAgBvB7B,EAAY2B,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6MAazBP,EAAmBK,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+CAK5BN,GAAgBI,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,mL","sources":["pages/MoviesDetails.jsx"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { NavLink } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie] = useHttp(getMovieDetails, movieId);\n\n  const location = useLocation();\n\n  const goBackRef = useRef(location.state?.from || '/movies');\n\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(goBackRef.current);\n  };\n\n  return (\n    <>\n      <StyledBtn onClick={handleGoBack}>Go back</StyledBtn>\n      {movie ? (\n        <div>\n          <StyledWrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              alt={movie.title}\n              width=\"350\"\n            />\n            <StyledInfo>\n              <h2>\n                {movie.title} ({movie.release_date.substring(0, 4)})\n              </h2>\n              <p>\n                User score: {Math.ceil(parseFloat(movie.vote_average) * 10)}%\n              </p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(el => el.name + ' ')}</p>\n            </StyledInfo>\n          </StyledWrapper>\n          <hr />\n          <StyledAdditional>Additional info</StyledAdditional>\n          <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          <Outlet />\n        </div>\n      ) : (\n        <InfinitySpin />\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  margin: 0 15px;\n  gap: 20px;\n`;\n\nconst StyledInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  h2 {\n    font-size: 36px;\n  }\n  h3,\n  h4 {\n    font-size: 24px;\n    margin: 0;\n  }\n  p {\n    font-size: 22px;\n  }\n`;\n\nconst StyledBtn = styled.button`\n  width: 100px;\n  padding: 10px;\n  margin: 0 0 10px 10px;\n  background-color: #096a3e;\n  color: white;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #3b906a;\n  }\n`;\n\nconst StyledAdditional = styled.h5`\n  font-size: 25px;\n  margin: 25px;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #070707;\n  font-weight: 500;\n  font-size: 22px;\n  margin-left: 15px;\n  margin-right: 5px;\n  &.active {\n    color: #096a3e;\n  }\n`;\n"],"names":["_location$state","movieId","useParams","_useHttp","useHttp","getMovieDetails","movie","_slicedToArray","location","useLocation","goBackRef","useRef","state","from","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","StyledBtn","onClick","current","StyledWrapper","src","concat","poster_path","alt","title","width","StyledInfo","release_date","substring","Math","ceil","parseFloat","vote_average","overview","genres","map","el","name","StyledAdditional","StyledNavLink","to","Outlet","InfinitySpin","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","NavLink","_templateObject5"],"sourceRoot":""}